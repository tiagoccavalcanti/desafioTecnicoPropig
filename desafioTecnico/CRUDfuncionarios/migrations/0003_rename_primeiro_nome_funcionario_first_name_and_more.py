# Generated by Django 5.1.6 on 2025-02-28 07:18

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('CRUDfuncionarios', '0002_remove_funcionario_date_joined_and_more'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.RenameField(
            model_name='funcionario',
            old_name='primeiro_nome',
            new_name='first_name',
        ),
        migrations.RenameField(
            model_name='funcionario',
            old_name='sobrenome',
            new_name='last_name',
        ),
        migrations.RemoveField(
            model_name='funcionario',
            name='username',
        ),
        migrations.AddField(
            model_name='funcionario',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AddField(
            model_name='funcionario',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AddField(
            model_name='funcionario',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.AddField(
            model_name='funcionario',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        ),
        migrations.AlterField(
            model_name='funcionario',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='funcionarios_groups', to='auth.group'),
        ),
        migrations.AlterField(
            model_name='funcionario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, related_name='funcionarios_permissions', to='auth.permission'),
        ),
    ]
